version: "3.9"
networks:
  roboshop:
    driver: bridge
volumes:
# This is equivalent to docker volume create [volume-name]. these are named volumes {managed by docker}
# {anonymous volume won't managed by docker} docker run -d -v my-vol: /usr/share/nginx/html -p 80:80 nginx 
  mysql:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/kalnavee/mysql
  redis:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/kalnavee/redis
  rabbitmq:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/kalnavee/rabbitmq
  mongodb:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: /home/kalnavee/mongodb
services:
  web:
    image: naveen2809/web:v1
    container_name: web
    ports:
    - "80:80"
    depends_on:
    - catalogue
    - shipping
    - user
    - cart
    - mysql
  mongodb:
    image: naveen2809/mongo:v1
    container_name: mongodb
    volumes:
    - mongodb:/data/db
  catalogue:
    image: naveen2809/catalogue:v1
    container_name: catalogue
    depends_on:
    - mongodb
  redis:
    image: redis
    container_name: redis
    volumes:
    - redis:/data
  user:
    image: naveen2809/user:v1
    container_name: user
    depends_on:
    - mongodb
    - redis
  cart:
    image: naveen2809/cart:v1
    container_name: cart
    depends_on:
      - redis
      - catalogue
  mysql:
    image: naveen2809/mysql:v1
    container_name: mysql
    volumes:
    - mysql:/var/lib/mysql
  shipping:
    image: naveen2809/shipping:v1
    container_name: shipping
    depends_on:
      - mysql
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    volumes:
    - rabbitmq:/var/lib/rabbitmq
  payment:
    image: naveen2809/payment:v1
    container_name: payment
    depends_on:
    - rabbitmq
  ratings:
    image: naveen2809/ratings:v1
    container_name: ratings
    depends_on:
    - mysql